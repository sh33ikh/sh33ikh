name: Quantum README Synchronization

on:
  schedule:
    - cron: '0 */4 * * *'  # Every 4 hours
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Dynamic Timestamp Update
      - name: Update Synchronization Timestamp
        run: |
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          sed -i "s/Last Synchronization: \`DYNAMIC_TIMESTAMP\`/Last Synchronization: \`$timestamp\`/" README.md

      # Advanced Metrics Generation
      - name: Generate Comprehensive Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          user: sh33ikh
          base: header, activity, community, repositories
          plugin_achievements: yes
          plugin_achievements_threshold: B
          plugin_notable: yes
          plugin_languages: yes
          plugin_lines: yes

      # Contribution Snake Animation
      - uses: Platane/snk@v3
        with:
          github_user_name: sh33ikh
          outputs: |
            dist/github-contribution-snake.svg
            dist/github-contribution-snake-dark.svg

      # Spotify Recently Played
      - name: Fetch Spotify Data
        uses: tecrodrigocastro/spotify-now-playing@main
        with:
          spotify_token: ${{ secrets.SPOTIFY_TOKEN }}

      # Wakatime Weekly Metrics
      - name: Wakatime Metrics
        uses: anmol098/waka-readme-stats@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Commit and Push Changes
      - name: Synchronize README
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add README.md
          git commit -m "ðŸ¤– Quantum README Synchronization" || exit 0
          git push

  # Optional: Generate Dynamic SVG Badge
  generate-badge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Create Dynamic SVG
        run: |
          npm install canvas
          node <<EOF
          const fs = require('fs');
          const { createCanvas } = require('canvas');

          function generateDynamicBadge() {
            const canvas = createCanvas(400, 100);
            const ctx = canvas.getContext('2d');

            const gradient = ctx.createLinearGradient(0, 0, 400, 100);
            gradient.addColorStop(0, '#6a11cb');
            gradient.addColorStop(1, '#2575fc');
            
            ctx.fillStyle = gradient;
            ctx.fillRect(0, 0, 400, 100);

            ctx.font = 'bold 24px Arial';
            ctx.fillStyle = 'white';
            ctx.textAlign = 'center';
            
            const quotes = [
              "Code is Poetry",
              "Innovation Never Sleeps", 
              "Build. Learn. Repeat."
            ];
            
            const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
            ctx.fillText(randomQuote, 200, 60);

            const svg = \`<svg xmlns="http://www.w3.org/2000/svg" width="400" height="100">
              <image href="\${canvas.toDataURL()}" width="400" height="100"/>
            </svg>\`;

            fs.writeFileSync('dynamic-badge.svg', svg);
          }

          generateDynamicBadge();
          EOF

      - name: Commit Badge
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add dynamic-badge.svg
          git commit -m "ðŸŽ¨ Updated Dynamic Badge" || exit 0
          git push
